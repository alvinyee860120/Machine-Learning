# -*- coding: utf-8 -*-
"""1_Naïve-Bayes_weather_example.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rN-zfcJ9BPy6o2Dq4FI2zh_Nksm3gBpN
"""

import pandas as pd
#讀取CSV檔案
data = pd.read_csv('weather.csv')

"""## info ( )
## 主要可以看有幾筆資料、每個欄位的資料型別是什麼(int, float..)、有無空值(null)的存在、佔據多少記憶體
"""

data.info()

"""##  describe ( )
## 主要是看資料的平均值、分佈情況、是否有資料傾斜Skew的問題
"""

data.describe ( )

"""## 切分input 和output"""

#x:input
x=data.loc[:,['outlook','temperature','humidity','windy']]
#y:output
y=data.loc[:,['play']]

"""##  sklearn: Naive Bayes Classifier"""

from sklearn import preprocessing
#將屬性轉為數字label
le = preprocessing.LabelEncoder()
#outlook: overcast: 0, rainy: 1, sunny: 2
X_outlook_encoded=le.fit_transform(x.outlook)
X_temp_encoded=le.fit_transform(x.temperature)
X_humidity_encoded=le.fit_transform(x.humidity)
X_windy_encoded=le.fit_transform(x.windy)

#將play轉為數字label
#play: no: 0 ,yes: 1
Y_play_label=le.fit_transform(y.play)

#將屬性合併
#變成list
feature=list(zip(X_outlook_encoded, X_temp_encoded,X_humidity_encoded,X_windy_encoded))

#轉成array
import numpy as np
features=np.asarray(feature)

"""## 訓練模型：訓練集"""

#Import Gaussian Naive Bayes 模型 (高斯樸素貝氏)
from sklearn.naive_bayes import GaussianNB
model = GaussianNB()

# 訓練集訓練模型
# model.fit(x, y)
model.fit(features, Y_play_label)

"""## 測試集測試模型"""

expected = Y_play_label
predicted = model.predict(features)
from sklearn import metrics
print(metrics.classification_report(expected, predicted))

print(metrics.confusion_matrix(expected, predicted))

#當weather是Overcast和temperature是Mild時，是否會去打球
predicted= model.predict([[0,2,1,1]]) # 0:Overcast, 2:Mild, 1:normal, 1:TRUE
print ("Predicted Value:", predicted)



















